\title{Tasks}{tasks}

\use-plugin{concourse-docs}

The smallest configurable unit in a Concourse pipeline is a single task. A task
can be thought of as a function from \reference{schema.task.inputs} to
\reference{schema.task.outputs} that can either succeed or fail.

Going a bit further, ideally tasks are \italic{pure} functions: given the same
set of inputs, it should either always succeed with the same outputs or always
fail. This is entirely up to your script's level of discipline, however. Flaky
tests or dependencies on the internet are the most common source of impurity.

Once you have a running Concourse deployment, you can start configuring your
tasks and executing them interactively from your terminal with the
\reference{fly-cli}{Fly} commandline tool.

Once you've figured out your tasks's configuration, you can reuse it for a
\reference{jobs}{Job} in your \reference{pipelines}{Pipeline}.

Conventionally a task's configuration is placed in the same repository as the
code it's testing, possibly under some \code{ci} directory.

\table-of-contents

\include-section{tasks/config.lit}
\include-section{tasks/running.lit}
\include-section{tasks/environment.lit}
